
הרצת הפרויקט:
יש להריץ בטרמינל מתוך התיקייה Assignment1 את הפקודות הבאות-
mvn clean install
zip --password dsp231 -r Project.zip target
ולאחר מכן להריץ כל לקוח כך-
java -jar target/assignment1.jar <inputfile.txt> <outputfile.html> <n> [terminate]
הסימונים "< >", "[ ]" מסמנים משתנים שיש להכניס בהתאם לכל הרצה.
חשוב לשים לב! שקובץ הקלט נמצא בתיקייה Assignment1, או לתת את ה-path המלא בהתאם.

בעת הפעלת התכנית, עבור ה-local application הראשון שנפתח מתבצע איתחול הכולל יצירת bucket, העלאת קובץ jar ל-bucket, יצירת Manager, ו-2 תורי SQS לתקשורת מול ה-Manager, שיוצר בעצמו  2 תורי SQS נוספים לתקשורת מול ה-Workers. לאחר מכן שולח את קובץ הקלט דרך ה-SQS, עליו ה-Manager מתחיל לעבוד ע"י שליחת משימות והקמת Workers בהתאם ליחס בין ה-n המתקבל לכמות התמונות לעיבוד.
בסוף כל ריצה, local application יוצר קובץ פלט HTML עם עיבוד התמונות הנדרש.

השתמשנו ב- "ami-0b0dcb5067f052a63" - הכולל linux של אמאזון וב-Instance type: T3_MICRO.
בממוצע עבור n=10, בהרצת לקוח ראשון, לקח כ-4:40 דקות, ועבור לקוחות נוספים בין דקה ל-2, תלוי במספר הלקוחות במקביל (ומהירות האינטרנט).

בטיחות- את קובץ ה-jar המכיל גישה ל-credentials כיווצנו לקובץ zip המוגן בסיסמה.

סקליביליות- בכל מחשב שעובדים נמחקים הקבצים מיד לאחר השימוש בהם, פרט לקובץ הקלט המקורי והפלט הסופי ולכן אין צורך בהנחות לגבי הזיכרון עבור טיפול בכמות לקוחות גבוהה. כרגע, עם כמות של כמיליון לקוחות התכנית תעבוד מאוד לאט אך נוכל בקלות לעדכן אותה ע"י הוספת טרדים שיקחו הודעות ב-Manager ויטפלו בהן.

יציבות- במקרה ו-Worker לא מסיים, או נתקע במהלך משימה, ההודעה עליו עבד לא תמחק (נמחקת רק בסיום המשימה) ותתבצע ע"י עובד אחר. בנוסף, במקרה של שגיאה שקופצת בעת עיבוד תמונה, ה-Worker מחזיר את הודעת השגיאה יחד עם ה-URL של התמונה הבעייתית, כלומר הוא לא אמור להתקע עליה.

טרדים- השתמשנו ב-2 טרדים בלבד ע"מ למשוך הודעות עבור ה-Manager מה-Local וה-Workers. בזמן שהטרדים מעדכנים את כמות ההודעות, ה-Manager מטפל במשימות ושולח הודעות בהתאם לצורך.

פקודת terminate- בהנתן לקוח עם terminate, הוא שולח את ההודעה ל-Manager שמחכה לסיים את כל המשימות שיש לו באוויר- כל עוד נשלחו על ידי לקוחות קודמים או הנוכחי, שולח תגובות ומחכה לראות שהתקבלו (תור התגובות ריק) ורק לאחר מכן מוחק את כל התורים, ה-bucket וה-EC2ים כולל עצמו.

מגבלות המערכת- ע"מ להיות בטוחים, לא אפשרנו יצירה של יותר מ-10 Workers בזמן נתון.

כל חלק במערכת עושה רק את המשימות המתאימות לו, משליחת ההודעות, יצירת הקבצים המתאימים וכו'.

